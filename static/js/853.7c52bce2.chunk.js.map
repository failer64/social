{"version":3,"file":"static/js/853.7c52bce2.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Users/Users.module.css?b9d0","redux/selectors/users-selectors.ts","components/Users/User.tsx","webpack://social/./src/components/Users/SearchForm.module.css?66a9","components/Users/SearchForm.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Users_body__BY4l-\",\"row\":\"Users_row__k66oc\",\"block\":\"Users_block__OG-lr\",\"top\":\"Users_top__H4240\",\"photo\":\"Users_photo__IDq11\",\"button\":\"Users_button__a01lk\",\"description\":\"Users_description__AoMK3\",\"name\":\"Users_name__9idWv\",\"status\":\"Users_status__NBs6z\",\"text\":\"Users_text__o5lb4\"};","import {createSelector} from \"reselect\";\r\nimport {StateType} from \"../redux-store\";\r\n\r\nexport const getUsersSelector = (state: StateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    });\r\n\r\nexport const pageSizeSelector = (state: StateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const totalUsersCountSelector = (state: StateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const currentPageSelector = (state: StateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const isFetchingSelector = (state: StateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const followingInProgressSelector = (state: StateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const filterSelector = (state: StateType) => {\r\n    return state.usersPage.filter;\r\n}","import styles from \"./Users.module.css\";\r\nimport img from \"./../../assets/img/photo.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {follow, unfollow} from \"../../redux/users-reducer\";\r\nimport {FC} from \"react\";\r\nimport {filterSelector, followingInProgressSelector} from \"../../redux/selectors/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {isAuthSelector} from \"../../redux/selectors/auth-selectors\";\r\n\r\nconst User: FC<PropsType> = ({user}) => {\r\n\r\n    const dispatch = useDispatch<any>();\r\n    const followingInProgress = useSelector(followingInProgressSelector);\r\n    const isAuth = useSelector(isAuthSelector);\r\n\r\n    return (<div key={user.id} className={styles.block}>\r\n        <div className={styles.top}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <div className={styles.photo}>\r\n                    <img alt='img' src={user.photos.small || img}/>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n        <div className={styles.description}>\r\n            <div>\r\n                <div className={styles.name}>{user.name}</div>\r\n                <div className={styles.status}>{user.status}</div>\r\n                <div className={styles.text}>id: {user.id}</div>\r\n            </div>\r\n        </div>\r\n        {\r\n            user.followed ? <button disabled={followingInProgress.some(id => id === user.id) || !isAuth}\r\n                                    onClick={() => {\r\n                                        dispatch(unfollow(user.id));\r\n                                    }} className={styles.button}>delete</button>\r\n                : <button disabled={followingInProgress.some(id => id === user.id) || !isAuth}\r\n                          onClick={() => {\r\n                              dispatch(follow(user.id));\r\n                          }} className={styles.button}>add friend</button>\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default User\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"SearchForm_body__zvf78\",\"input\":\"SearchForm_input__g9uO0\",\"select\":\"SearchForm_select__Zl3wr\",\"button\":\"SearchForm_button__hP6q2\"};","import React, {FC} from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions, FilterType, getUsers} from \"../../redux/users-reducer\";\r\nimport style from './SearchForm.module.css'\r\n\r\nexport const SearchForm: FC<PropsType> = ({pageSize, filter}) => {\r\n    const dispatch = useDispatch<any>();\r\n\r\n    const submit = (values: ValuesType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const newFilter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        dispatch(getUsers(1, pageSize, newFilter));\r\n        dispatch(actions.setCurrentPage(1));\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const initialValues: ValuesType = {\r\n        term: filter.term,\r\n        friend: filter.friend === null ? 'null' : filter.friend === true ? 'true' : 'false'\r\n    };\r\n\r\n    return <div className={style.body}>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={initialValues}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field className={style.input} type=\"text\" name=\"term\" placeholder={\"Enter Name\"}/>\r\n                    <Field className={style.select} name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Followed</option>\r\n                        <option value=\"false\">Not Followed</option>\r\n                    </Field>\r\n                    <button className={style.button} type=\"submit\" disabled={isSubmitting}>\r\n                        Search\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    filter: FilterType\r\n}\r\n\r\ntype ValuesType = {\r\n    term: string\r\n    friend: string\r\n}\r\n","import styles from \"./Users.module.css\";\r\nimport {Pagination} from 'antd';\r\nimport User from './User'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {actions, getUsers} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {SearchForm} from \"./SearchForm\";\r\nimport {\r\n    currentPageSelector,\r\n    filterSelector,\r\n    getUsersSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector, totalUsersCountSelector\r\n} from \"../../redux/selectors/users-selectors\";\r\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\r\n\r\n\r\nconst UsersPage: FC = React.memo(() => {\r\n    const isFetching = useSelector(isFetchingSelector);\r\n    const currentPage = useSelector(currentPageSelector);\r\n    const pageSize = useSelector(pageSizeSelector);\r\n    const users = useSelector(getUsersSelector);\r\n    const filter = useSelector(filterSelector);\r\n    const totalItemsCount = useSelector(totalUsersCountSelector);\r\n    const dispatch = useDispatch<any>();\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const [searchParams] = useSearchParams(location.search);\r\n\r\n    useEffect(() => {\r\n\r\n        // @ts-ignore\r\n        const parsed: ParsedType = Object.fromEntries([...searchParams]);\r\n\r\n        const actualPage = Number(parsed.page);\r\n        let actualFilter = filter;\r\n\r\n        actualFilter.term = parsed.term;\r\n        if (actualFilter.term === undefined) {\r\n            actualFilter.term = '';\r\n        }\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n        if (actualPage) {\r\n            dispatch(actions.setCurrentPage(actualPage));\r\n            dispatch(getUsers(actualPage, pageSize, actualFilter));\r\n        } else {\r\n            dispatch(getUsers(currentPage, pageSize, actualFilter));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        navigate(`/users?page=${currentPage}` +\r\n            (filter.term && `&term=${filter.term}`) +\r\n            (filter.friend !== null ? `&friend=${filter.friend}` : '')\r\n        );\r\n    }, [filter, currentPage, location.search])\r\n\r\n\r\n    const onPageChanged = (pageNumber: number, pageSize: number) => {\r\n        dispatch(actions.setCurrentPage(pageNumber));\r\n        dispatch(getUsers(pageNumber, pageSize, filter));\r\n        // dispatch(getUsers(pageNumber, pageSize, filter));\r\n    }\r\n\r\n    const onShowSizeChanged = (current: number = 1, size: number) => {\r\n        dispatch(actions.resizePage(size));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchForm pageSize={pageSize} filter={filter}/>\r\n            <Pagination onShowSizeChange={onShowSizeChanged} pageSizeOptions={[6, 12, 24, 48]} defaultPageSize={12}\r\n                        total={totalItemsCount} onChange={onPageChanged} current={currentPage}\r\n                        style={{marginBottom: '20px', textAlign: 'center'}}/>\r\n            {isFetching ? <Preloader/> :\r\n                <div className={styles.row}>\r\n                    {\r\n                        users.map(u =>\r\n                            <User key={u.id} user={u}/>\r\n                        )\r\n                    }\r\n                    {!users.length && <div>not found</div>}\r\n                </div>}\r\n            {/*<Paginator pageSize={pageSize} onPageChanged={onPageChanged} currentPage={currentPage}/>*/}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UsersPage\r\n\r\nexport type ParsedType =\r\n    {\r\n        term: string\r\n        friend: 'null' | 'false' | 'true'\r\n        page: number\r\n    }"],"names":["getUsersSelector","state","usersPage","users","pageSizeSelector","createSelector","filter","u","pageSize","totalUsersCountSelector","totalUsersCount","currentPageSelector","currentPage","isFetchingSelector","isFetching","followingInProgressSelector","followingInProgress","filterSelector","user","dispatch","useDispatch","useSelector","isAuth","isAuthSelector","className","styles","to","id","alt","src","photos","small","img","name","status","followed","disabled","some","onClick","unfollow","follow","SearchForm","initialValues","term","friend","style","enableReinitialize","onSubmit","values","setSubmitting","newFilter","getUsers","actions","isSubmitting","type","placeholder","as","value","UsersPage","React","totalItemsCount","location","useLocation","navigate","useNavigate","useSearchParams","search","searchParams","useEffect","parsed","Object","fromEntries","actualPage","Number","page","actualFilter","undefined","onShowSizeChange","size","pageSizeOptions","defaultPageSize","total","onChange","pageNumber","current","marginBottom","textAlign","Preloader","map","length"],"sourceRoot":""}