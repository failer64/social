{"version":3,"file":"static/js/491.5134c339.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,0BAA0B,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,OAAS,yB,UCA3N,EAAuB,mB,SCYvB,EAVa,SAACA,GACb,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACC,gBAAKC,UAAWC,EAAhB,UACC,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAG5B,ECVD,EAA0B,yBCS1B,EARgB,SAACN,GAChB,OACC,gBAAKG,UAAWC,EAAhB,SACEJ,EAAMO,SAGT,E,UCHKC,EAAc,SAACR,GACjB,OACI,0BACI,SAAC,KAAD,CACIS,cAAe,CACXC,QAAS,IAEbC,SAAU,SAAAC,GACNZ,EAAMW,SAASC,EAClB,EANL,UAQI,UAAC,KAAD,CAAMT,UAAWC,EAAAA,KAAjB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,UAEI,SAAC,KAAD,CAAOE,KAAK,UAAUO,YAAY,mBAErCb,EAAMc,OAAQ,gBAAKX,UAAWC,EAAAA,MAAhB,SAA+BJ,EAAMc,QAAe,MACnE,mBAAQC,KAAM,SAAUZ,UAAWC,EAAAA,OAAnC,wBAKnB,EAsBD,EApBgB,SAACJ,GACb,IAAIgB,EAAUhB,EAAMiB,YAAYD,QAAQE,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMb,KAAMa,EAAEb,MAAWa,EAAEjB,GAA/B,IACzCkB,EAAWpB,EAAMiB,YAAYG,SAASF,KAAI,SAAAG,GAAC,OAAI,SAAC,EAAD,CAASd,QAASc,EAAEd,SAAcc,EAAEnB,GAAxC,IAM/C,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,SACKY,KAEL,iBAAKb,UAAWC,EAAAA,SAAhB,UACKgB,GACD,SAACZ,EAAD,CAAaG,SAXN,SAACC,GAChBZ,EAAMsB,WAAWV,EAAOF,QAC3B,SAYJ,E,oEC3CGa,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE1B,ECYD,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACJ,GACnB,MAAO,CACHP,YAAaO,EAAMP,YAE1B,IAEwB,SAACY,GACtB,MAAO,CACHP,WAAY,SAACf,GACTsB,GAASC,EAAAA,EAAAA,GAAwBvB,GACpC,EAER,KDR+B,SAACwB,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKjC,MAAMyB,QAET,SAACM,GAAD,UAAeE,KAAKjC,SAFI,SAAC,KAAD,CAAUK,GAAI,UAGhD,KAPsC,GAEX6B,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQL,EAARK,CAAoCI,EAG5E,GCHD,CAGEG,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Item/Item.module.css?d5ee","components/Dialogs/Item/Item.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__T2crw\",\"items\":\"Dialogs_items__vMcxN\",\"messages\":\"Dialogs_messages__VPJSo\",\"form\":\"Dialogs_form__hizr5\",\"title\":\"Dialogs_title__PlclM\",\"input\":\"Dialogs_input__FTZHz\",\"button\":\"Dialogs_button__xhOM4\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Item_item__pAvp6\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Item.module.css\"\r\n\r\nconst Item = (props) => {\r\n\tlet path = '/dialogs/' + props.id;\r\n\r\n\treturn (\r\n\t\t<div className={styles.item}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Item;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__r6Yw0\"};","import styles from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={styles.message}>\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Message;","import styles from './Dialogs.module.css'\r\nimport Item from './Item/Item';\r\nimport Message from './Message/Message';\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    newText: \"\",\r\n                }}\r\n                onSubmit={values => {\r\n                    props.onSubmit(values);\r\n                }}\r\n            >\r\n                <Form className={styles.body}>\r\n                    <div className={styles.input}>\r\n                        {/*<textarea name=\"newText\" placeholder=\"your news...\"></textarea>*/}\r\n                        <Field name='newText' placeholder=\"your news...\"/>\r\n                    </div>\r\n                    {props.error ? <div className={styles.error}>{props.error}</div> : null}\r\n                    <button type={\"submit\"} className={styles.button}>send</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogs = props.dialogsPage.dialogs.map(i => <Item name={i.name} key={i.id}/>);\r\n    let messages = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let onAddMessage = (values) => {\r\n        props.addMessage(values.newText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.items}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messages}\r\n                <MessageForm onSubmit={onAddMessage}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Dialogs;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {addMessageActionCreator} from '../../redux/dialogs-reducer'\r\nimport {connect} from 'react-redux';\r\nimport Dialogs from './Dialogs'\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","className","styles","to","name","message","MessageForm","initialValues","newText","onSubmit","values","placeholder","error","type","dialogs","dialogsPage","map","i","messages","m","addMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}