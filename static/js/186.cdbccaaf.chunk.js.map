{"version":3,"file":"static/js/186.cdbccaaf.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,0BAA0B,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,OAAS,yB,UCA3N,EAAuB,mB,SCkBvB,EAV4B,SAAC,GAAgB,IAAfA,EAAc,EAAdA,KACtBC,EAAO,YAD6B,EAARC,GAGhC,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,KAG/B,EChBD,EAA0B,yBCe1B,EAR+B,SAAC,GAAe,IAAdM,EAAa,EAAbA,QAChC,OACC,gBAAKH,UAAWC,EAAhB,SACEE,GAGH,E,UCMKC,EAAiC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrC,OACI,0BACI,SAAC,KAAD,CACIC,cAAe,CACXC,QAAS,IAEbF,SAAU,SAAAG,GACNH,EAASG,EACZ,EANL,UAQI,UAAC,KAAD,CAAMR,UAAWC,EAAAA,KAAjB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,UAEI,SAAC,KAAD,CAAOJ,KAAK,UAAUY,YAAY,oBAGtC,mBAAQC,KAAM,SAAUV,UAAWC,EAAAA,OAAnC,wBAKnB,EAoBD,EAlBsC,SAAC,GAAqC,IAApCU,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAMvD,OACI,iBAAKb,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,SACKU,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMlB,KAAMkB,EAAElB,KAAME,GAAIgB,EAAEhB,IAASgB,EAAEhB,GAAzC,OAElB,iBAAKC,UAAWC,EAAAA,SAAhB,UACKW,EAASE,KAAI,SAAAE,GAAC,OAAI,SAAC,EAAD,CAASb,QAASa,EAAEb,SAAca,EAAEjB,GAAxC,KACf,SAACK,EAAD,CAAaC,SAXN,SAACG,GAChBK,EAAWL,EAAOD,QACrB,SAYJ,E,oEChDGU,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE1B,ECoBD,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBoB,SAACJ,GACrB,MAAO,CACHP,QAASO,EAAMK,YAAYZ,QAC3BC,SAAUM,EAAMK,YAAYX,SAEnC,IAE0B,SAACY,GACxB,MAAO,CACHX,WAAY,SAACV,GACTqB,GAASC,EAAAA,EAAAA,GAAwBtB,GACpC,EAER,KDhB+B,SAACuB,GAAoB,IAE3CC,EAF0C,0IAG5C,WACI,OAAMC,KAAKC,MAAMV,QAEV,SAACO,GAAD,UAAeE,KAAKC,SAFM,SAAC,KAAD,CAAU3B,GAAI,UAGlD,KAP2C,GAEhB4B,EAAAA,WAYhC,OAHIR,EAAAA,EAAAA,IACIL,EADJK,CACgCK,EAGvC,GCGD,CAKEI,E","sources":["webpack://social/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://social/./src/components/Dialogs/Item/Item.module.css?d5ee","components/Dialogs/Item/Item.tsx","webpack://social/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__T2crw\",\"items\":\"Dialogs_items__vMcxN\",\"messages\":\"Dialogs_messages__VPJSo\",\"form\":\"Dialogs_form__hizr5\",\"title\":\"Dialogs_title__PlclM\",\"input\":\"Dialogs_input__FTZHz\",\"button\":\"Dialogs_button__xhOM4\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Item_item__pAvp6\"};","import {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Item.module.css\"\r\nimport {FC} from \"react\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst Item: FC<PropsType> = ({name, id}) => {\r\n    let path = '/dialogs/' + id;\r\n\r\n    return (\r\n        <div className={styles.item}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__r6Yw0\"};","import styles from './Message.module.css'\r\nimport {FC} from \"react\";\r\n\r\ntype PropsType = {\r\n\tmessage: string\r\n\tkey: number\r\n}\r\n\r\nconst Message: FC<PropsType> = ({message}) => {\r\n\treturn (\r\n\t\t<div className={styles.message}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Message;","import styles from './Dialogs.module.css'\r\nimport Item from './Item/Item';\r\nimport Message from './Message/Message';\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {FC} from \"react\";\r\nimport {DialogsType, MessageType} from \"../../types/types\";\r\n\r\ntype PropsFormType = {\r\n    onSubmit: (values: ValuesType) => void\r\n}\r\ntype ValuesType = {\r\n    newText: string\r\n}\r\n\r\ntype PropsDialogsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    addMessage: (text: string) => void\r\n}\r\n\r\nconst MessageForm: FC<PropsFormType> = ({onSubmit}) => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    newText: \"\",\r\n                }}\r\n                onSubmit={values => {\r\n                    onSubmit(values);\r\n                }}\r\n            >\r\n                <Form className={styles.body}>\r\n                    <div className={styles.input}>\r\n                        {/*<textarea name=\"newText\" placeholder=\"your news...\"></textarea>*/}\r\n                        <Field name='newText' placeholder=\"your news...\"/>\r\n                    </div>\r\n                    {/*{props.error ? <div className={styles.error}>{props.error}</div> : null}*/}\r\n                    <button type={\"submit\"} className={styles.button}>send</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Dialogs: FC<PropsDialogsType> = ({dialogs, messages, addMessage}) => {\r\n\r\n    let onAddMessage = (values: ValuesType) => {\r\n        addMessage(values.newText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.items}>\r\n                {dialogs.map(i => <Item name={i.name} id={i.id} key={i.id}/>)}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messages.map(m => <Message message={m.message} key={m.id}/>)}\r\n                <MessageForm onSubmit={onAddMessage}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Dialogs;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {}\r\ntype OwnPropsType = {}\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component: any) => {\r\n\r\n    class RedirectComponent extends React.Component<MapStatePropsType> {\r\n        render() {\r\n            if (!(this.props.isAuth)) return <Navigate to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent =\r\n        connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, StateType>(\r\n            mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {addMessageActionCreator} from '../../redux/dialogs-reducer'\r\nimport {connect} from 'react-redux';\r\nimport Dialogs from './Dialogs'\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {DialogsType, MessageType} from \"../../types/types\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (message: string) => void\r\n}\r\ntype OwnPropsType = {\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (message: string) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, StateType>(\r\n        mapStateToProps,\r\n        mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"names":["name","path","id","className","styles","to","message","MessageForm","onSubmit","initialValues","newText","values","placeholder","type","dialogs","messages","addMessage","map","i","m","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","props","React","Dialogs"],"sourceRoot":""}